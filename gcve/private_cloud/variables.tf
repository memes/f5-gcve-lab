variable "name" {
  type     = string
  nullable = false
  validation {
    condition     = can(regex("^[a-z][a-z0-9-]{0,62}$", var.name))
    error_message = "The name variable must be RFC1035 compliant and between 1 and 63 characters in length."
  }
  description = <<-EOD
The prefix to use when naming resources managed by this module. Must be RFC1035
compliant and between 1 and 63 characters in length, inclusive.
EOD
}

variable "project_id" {
  type     = string
  nullable = false
  validation {
    condition     = can(regex("^[a-z][a-z0-9-]{4,28}[a-z0-9]$", var.project_id))
    error_message = "The project_id variable must must be 6 to 30 lowercase letters, digits, or hyphens; it must start with a letter and cannot end with a hyphen."
  }
  description = <<-EOD
The GCP project identifier where the resources will be created
EOD
}

variable "locations" {
  type     = list(string)
  nullable = false
  validation {
    condition     = alltrue([for location in var.locations : can(regex("^[a-z]{2,20}-[a-z]{4,20}[0-9](?:-[a-z])?$", location))])
    error_message = "Every region value must be a valid GCVE location name."
  }
  description = <<-EOD
The GCVE private cloud locations where where the resources will be deployed.
EOD
}

variable "vpc_self_link" {
  type     = string
  nullable = false
  validation {
    condition     = can(regex("^(?:https://www.googleapis.com/compute/v1/)?projects/[a-z][a-z0-9-]{4,28}[a-z0-9]/global/networks/[a-z]([a-z0-9-]+[a-z0-9])?$", var.vpc_self_link))
    error_message = "The vpc_self_link value must be a fully-qualified network self-link URI."
  }
  description = <<-EOD
The fully-qualified network self-link to which the VMware private cloud will be peered.
EOD
}
